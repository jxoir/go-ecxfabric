// Code generated by go-swagger; DO NOT EDIT.

package routing_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAllRoutingInstancesUsingGETParams creates a new GetAllRoutingInstancesUsingGETParams object
// with the default values initialized.
func NewGetAllRoutingInstancesUsingGETParams() *GetAllRoutingInstancesUsingGETParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(900)
	)
	return &GetAllRoutingInstancesUsingGETParams{
		PageNumber: pageNumberDefault,
		PageSize:   pageSizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllRoutingInstancesUsingGETParamsWithTimeout creates a new GetAllRoutingInstancesUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAllRoutingInstancesUsingGETParamsWithTimeout(timeout time.Duration) *GetAllRoutingInstancesUsingGETParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(900)
	)
	return &GetAllRoutingInstancesUsingGETParams{
		PageNumber: pageNumberDefault,
		PageSize:   pageSizeDefault,

		timeout: timeout,
	}
}

// NewGetAllRoutingInstancesUsingGETParamsWithContext creates a new GetAllRoutingInstancesUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAllRoutingInstancesUsingGETParamsWithContext(ctx context.Context) *GetAllRoutingInstancesUsingGETParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(900)
	)
	return &GetAllRoutingInstancesUsingGETParams{
		PageNumber: pageNumberDefault,
		PageSize:   pageSizeDefault,

		Context: ctx,
	}
}

// NewGetAllRoutingInstancesUsingGETParamsWithHTTPClient creates a new GetAllRoutingInstancesUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAllRoutingInstancesUsingGETParamsWithHTTPClient(client *http.Client) *GetAllRoutingInstancesUsingGETParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(900)
	)
	return &GetAllRoutingInstancesUsingGETParams{
		PageNumber: pageNumberDefault,
		PageSize:   pageSizeDefault,
		HTTPClient: client,
	}
}

/*GetAllRoutingInstancesUsingGETParams contains all the parameters to send to the API endpoint
for the get all routing instances using g e t operation typically these are written to a http.Request
*/
type GetAllRoutingInstancesUsingGETParams struct {

	/*Authorization
	  Specify the OAuth Bearer token with prefix 'Bearer '.

	*/
	Authorization string
	/*MetroCode
	  metroCode

	*/
	MetroCode *string
	/*PageNumber
	  pageNumber

	*/
	PageNumber int32
	/*PageSize
	  pageSize

	*/
	PageSize int32
	/*States
	  states

	*/
	States []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithTimeout(timeout time.Duration) *GetAllRoutingInstancesUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithContext(ctx context.Context) *GetAllRoutingInstancesUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithHTTPClient(client *http.Client) *GetAllRoutingInstancesUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithAuthorization(authorization string) *GetAllRoutingInstancesUsingGETParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithMetroCode adds the metroCode to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithMetroCode(metroCode *string) *GetAllRoutingInstancesUsingGETParams {
	o.SetMetroCode(metroCode)
	return o
}

// SetMetroCode adds the metroCode to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetMetroCode(metroCode *string) {
	o.MetroCode = metroCode
}

// WithPageNumber adds the pageNumber to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithPageNumber(pageNumber int32) *GetAllRoutingInstancesUsingGETParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetPageNumber(pageNumber int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithPageSize(pageSize int32) *GetAllRoutingInstancesUsingGETParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetPageSize(pageSize int32) {
	o.PageSize = pageSize
}

// WithStates adds the states to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) WithStates(states []string) *GetAllRoutingInstancesUsingGETParams {
	o.SetStates(states)
	return o
}

// SetStates adds the states to the get all routing instances using g e t params
func (o *GetAllRoutingInstancesUsingGETParams) SetStates(states []string) {
	o.States = states
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllRoutingInstancesUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.MetroCode != nil {

		// query param metroCode
		var qrMetroCode string
		if o.MetroCode != nil {
			qrMetroCode = *o.MetroCode
		}
		qMetroCode := qrMetroCode
		if qMetroCode != "" {
			if err := r.SetQueryParam("metroCode", qMetroCode); err != nil {
				return err
			}
		}

	}

	// query param pageNumber
	qrPageNumber := o.PageNumber
	qPageNumber := swag.FormatInt32(qrPageNumber)
	if qPageNumber != "" {
		if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
			return err
		}
	}

	// query param pageSize
	qrPageSize := o.PageSize
	qPageSize := swag.FormatInt32(qrPageSize)
	if qPageSize != "" {
		if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
			return err
		}
	}

	valuesStates := o.States

	joinedStates := swag.JoinByFormat(valuesStates, "multi")
	// query array param states
	if err := r.SetQueryParam("states", joinedStates...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
