// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/buyer/models"
)

// PerformUserActionUsingPATCHReader is a Reader for the PerformUserActionUsingPATCH structure.
type PerformUserActionUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PerformUserActionUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPerformUserActionUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPerformUserActionUsingPATCHBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPerformUserActionUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPerformUserActionUsingPATCHInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPerformUserActionUsingPATCHOK creates a PerformUserActionUsingPATCHOK with default headers values
func NewPerformUserActionUsingPATCHOK() *PerformUserActionUsingPATCHOK {
	return &PerformUserActionUsingPATCHOK{}
}

/*PerformUserActionUsingPATCHOK handles this case with default header values.

success
*/
type PerformUserActionUsingPATCHOK struct {
	Payload *models.DeleteConnectionResponse
}

func (o *PerformUserActionUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /ecx/v3/l2/connections/{connId}][%d] performUserActionUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *PerformUserActionUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteConnectionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformUserActionUsingPATCHBadRequest creates a PerformUserActionUsingPATCHBadRequest with default headers values
func NewPerformUserActionUsingPATCHBadRequest() *PerformUserActionUsingPATCHBadRequest {
	return &PerformUserActionUsingPATCHBadRequest{}
}

/*PerformUserActionUsingPATCHBadRequest handles this case with default header values.

Bad request
*/
type PerformUserActionUsingPATCHBadRequest struct {
	Payload models.ErrorResponseArray
}

func (o *PerformUserActionUsingPATCHBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /ecx/v3/l2/connections/{connId}][%d] performUserActionUsingPATCHBadRequest  %+v", 400, o.Payload)
}

func (o *PerformUserActionUsingPATCHBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformUserActionUsingPATCHUnauthorized creates a PerformUserActionUsingPATCHUnauthorized with default headers values
func NewPerformUserActionUsingPATCHUnauthorized() *PerformUserActionUsingPATCHUnauthorized {
	return &PerformUserActionUsingPATCHUnauthorized{}
}

/*PerformUserActionUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type PerformUserActionUsingPATCHUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *PerformUserActionUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /ecx/v3/l2/connections/{connId}][%d] performUserActionUsingPATCHUnauthorized  %+v", 401, o.Payload)
}

func (o *PerformUserActionUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformUserActionUsingPATCHInternalServerError creates a PerformUserActionUsingPATCHInternalServerError with default headers values
func NewPerformUserActionUsingPATCHInternalServerError() *PerformUserActionUsingPATCHInternalServerError {
	return &PerformUserActionUsingPATCHInternalServerError{}
}

/*PerformUserActionUsingPATCHInternalServerError handles this case with default header values.

Internal Server Error
*/
type PerformUserActionUsingPATCHInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PerformUserActionUsingPATCHInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /ecx/v3/l2/connections/{connId}][%d] performUserActionUsingPATCHInternalServerError  %+v", 500, o.Payload)
}

func (o *PerformUserActionUsingPATCHInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
