// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/buyer/models"
)

// DeleteByIDUsingDELETEReader is a Reader for the DeleteByIDUsingDELETE structure.
type DeleteByIDUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteByIDUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteByIDUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteByIDUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteByIDUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteByIDUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeleteByIDUsingDELETEMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteByIDUsingDELETEConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteByIDUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteByIDUsingDELETEServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteByIDUsingDELETENoContent creates a DeleteByIDUsingDELETENoContent with default headers values
func NewDeleteByIDUsingDELETENoContent() *DeleteByIDUsingDELETENoContent {
	return &DeleteByIDUsingDELETENoContent{}
}

/*DeleteByIDUsingDELETENoContent handles this case with default header values.

Success
*/
type DeleteByIDUsingDELETENoContent struct {
}

func (o *DeleteByIDUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETENoContent ", 204)
}

func (o *DeleteByIDUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteByIDUsingDELETEBadRequest creates a DeleteByIDUsingDELETEBadRequest with default headers values
func NewDeleteByIDUsingDELETEBadRequest() *DeleteByIDUsingDELETEBadRequest {
	return &DeleteByIDUsingDELETEBadRequest{}
}

/*DeleteByIDUsingDELETEBadRequest handles this case with default header values.

Bad request
*/
type DeleteByIDUsingDELETEBadRequest struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteByIDUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteByIDUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteByIDUsingDELETEUnauthorized creates a DeleteByIDUsingDELETEUnauthorized with default headers values
func NewDeleteByIDUsingDELETEUnauthorized() *DeleteByIDUsingDELETEUnauthorized {
	return &DeleteByIDUsingDELETEUnauthorized{}
}

/*DeleteByIDUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteByIDUsingDELETEUnauthorized struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteByIDUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETEUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteByIDUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteByIDUsingDELETEForbidden creates a DeleteByIDUsingDELETEForbidden with default headers values
func NewDeleteByIDUsingDELETEForbidden() *DeleteByIDUsingDELETEForbidden {
	return &DeleteByIDUsingDELETEForbidden{}
}

/*DeleteByIDUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteByIDUsingDELETEForbidden struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteByIDUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETEForbidden  %+v", 403, o.Payload)
}

func (o *DeleteByIDUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteByIDUsingDELETEMethodNotAllowed creates a DeleteByIDUsingDELETEMethodNotAllowed with default headers values
func NewDeleteByIDUsingDELETEMethodNotAllowed() *DeleteByIDUsingDELETEMethodNotAllowed {
	return &DeleteByIDUsingDELETEMethodNotAllowed{}
}

/*DeleteByIDUsingDELETEMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type DeleteByIDUsingDELETEMethodNotAllowed struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteByIDUsingDELETEMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETEMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeleteByIDUsingDELETEMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteByIDUsingDELETEConflict creates a DeleteByIDUsingDELETEConflict with default headers values
func NewDeleteByIDUsingDELETEConflict() *DeleteByIDUsingDELETEConflict {
	return &DeleteByIDUsingDELETEConflict{}
}

/*DeleteByIDUsingDELETEConflict handles this case with default header values.

Conflict
*/
type DeleteByIDUsingDELETEConflict struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteByIDUsingDELETEConflict) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETEConflict  %+v", 409, o.Payload)
}

func (o *DeleteByIDUsingDELETEConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteByIDUsingDELETEInternalServerError creates a DeleteByIDUsingDELETEInternalServerError with default headers values
func NewDeleteByIDUsingDELETEInternalServerError() *DeleteByIDUsingDELETEInternalServerError {
	return &DeleteByIDUsingDELETEInternalServerError{}
}

/*DeleteByIDUsingDELETEInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteByIDUsingDELETEInternalServerError struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteByIDUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETEInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteByIDUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteByIDUsingDELETEServiceUnavailable creates a DeleteByIDUsingDELETEServiceUnavailable with default headers values
func NewDeleteByIDUsingDELETEServiceUnavailable() *DeleteByIDUsingDELETEServiceUnavailable {
	return &DeleteByIDUsingDELETEServiceUnavailable{}
}

/*DeleteByIDUsingDELETEServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type DeleteByIDUsingDELETEServiceUnavailable struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteByIDUsingDELETEServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/subscription/{uuid}][%d] deleteByIdUsingDELETEServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteByIDUsingDELETEServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
