// Code generated by go-swagger; DO NOT EDIT.

package service_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/seller/models"
)

// NewEditL3ServiceProfileUsingPUTParams creates a new EditL3ServiceProfileUsingPUTParams object
// with the default values initialized.
func NewEditL3ServiceProfileUsingPUTParams() *EditL3ServiceProfileUsingPUTParams {
	var ()
	return &EditL3ServiceProfileUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEditL3ServiceProfileUsingPUTParamsWithTimeout creates a new EditL3ServiceProfileUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEditL3ServiceProfileUsingPUTParamsWithTimeout(timeout time.Duration) *EditL3ServiceProfileUsingPUTParams {
	var ()
	return &EditL3ServiceProfileUsingPUTParams{

		timeout: timeout,
	}
}

// NewEditL3ServiceProfileUsingPUTParamsWithContext creates a new EditL3ServiceProfileUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewEditL3ServiceProfileUsingPUTParamsWithContext(ctx context.Context) *EditL3ServiceProfileUsingPUTParams {
	var ()
	return &EditL3ServiceProfileUsingPUTParams{

		Context: ctx,
	}
}

// NewEditL3ServiceProfileUsingPUTParamsWithHTTPClient creates a new EditL3ServiceProfileUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEditL3ServiceProfileUsingPUTParamsWithHTTPClient(client *http.Client) *EditL3ServiceProfileUsingPUTParams {
	var ()
	return &EditL3ServiceProfileUsingPUTParams{
		HTTPClient: client,
	}
}

/*EditL3ServiceProfileUsingPUTParams contains all the parameters to send to the API endpoint
for the edit l3 service profile using p u t operation typically these are written to a http.Request
*/
type EditL3ServiceProfileUsingPUTParams struct {

	/*Authorization
	  Specify the OAuth Bearer token with prefix 'Bearer '.

	*/
	Authorization string
	/*LastUpdatedDate
	  last update date

	*/
	LastUpdatedDate string
	/*ServiceProfileModel
	  serviceProfileModel

	*/
	ServiceProfileModel *models.ServiceProfileModelv3
	/*UUID
	  uuid

	*/
	UUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) WithTimeout(timeout time.Duration) *EditL3ServiceProfileUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) WithContext(ctx context.Context) *EditL3ServiceProfileUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) WithHTTPClient(client *http.Client) *EditL3ServiceProfileUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) WithAuthorization(authorization string) *EditL3ServiceProfileUsingPUTParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithLastUpdatedDate adds the lastUpdatedDate to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) WithLastUpdatedDate(lastUpdatedDate string) *EditL3ServiceProfileUsingPUTParams {
	o.SetLastUpdatedDate(lastUpdatedDate)
	return o
}

// SetLastUpdatedDate adds the lastUpdatedDate to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) SetLastUpdatedDate(lastUpdatedDate string) {
	o.LastUpdatedDate = lastUpdatedDate
}

// WithServiceProfileModel adds the serviceProfileModel to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) WithServiceProfileModel(serviceProfileModel *models.ServiceProfileModelv3) *EditL3ServiceProfileUsingPUTParams {
	o.SetServiceProfileModel(serviceProfileModel)
	return o
}

// SetServiceProfileModel adds the serviceProfileModel to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) SetServiceProfileModel(serviceProfileModel *models.ServiceProfileModelv3) {
	o.ServiceProfileModel = serviceProfileModel
}

// WithUUID adds the uuid to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) WithUUID(uuid string) *EditL3ServiceProfileUsingPUTParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the edit l3 service profile using p u t params
func (o *EditL3ServiceProfileUsingPUTParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *EditL3ServiceProfileUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// header param lastUpdatedDate
	if err := r.SetHeaderParam("lastUpdatedDate", o.LastUpdatedDate); err != nil {
		return err
	}

	if o.ServiceProfileModel != nil {
		if err := r.SetBodyParam(o.ServiceProfileModel); err != nil {
			return err
		}
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
