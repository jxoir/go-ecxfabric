// Code generated by go-swagger; DO NOT EDIT.

package service_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/seller/models"
)

// UpdateL2ServiceProfileUsingPUTReader is a Reader for the UpdateL2ServiceProfileUsingPUT structure.
type UpdateL2ServiceProfileUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateL2ServiceProfileUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateL2ServiceProfileUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateL2ServiceProfileUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateL2ServiceProfileUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateL2ServiceProfileUsingPUTOK creates a UpdateL2ServiceProfileUsingPUTOK with default headers values
func NewUpdateL2ServiceProfileUsingPUTOK() *UpdateL2ServiceProfileUsingPUTOK {
	return &UpdateL2ServiceProfileUsingPUTOK{}
}

/*UpdateL2ServiceProfileUsingPUTOK handles this case with default header values.

success
*/
type UpdateL2ServiceProfileUsingPUTOK struct {
	Payload *models.PutServiceprofilesResponse
}

func (o *UpdateL2ServiceProfileUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /ecx/v3/l2/serviceprofiles][%d] updateL2ServiceProfileUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateL2ServiceProfileUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutServiceprofilesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateL2ServiceProfileUsingPUTBadRequest creates a UpdateL2ServiceProfileUsingPUTBadRequest with default headers values
func NewUpdateL2ServiceProfileUsingPUTBadRequest() *UpdateL2ServiceProfileUsingPUTBadRequest {
	return &UpdateL2ServiceProfileUsingPUTBadRequest{}
}

/*UpdateL2ServiceProfileUsingPUTBadRequest handles this case with default header values.

Bad request
*/
type UpdateL2ServiceProfileUsingPUTBadRequest struct {
	Payload models.ErrorResponseArray
}

func (o *UpdateL2ServiceProfileUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /ecx/v3/l2/serviceprofiles][%d] updateL2ServiceProfileUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateL2ServiceProfileUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateL2ServiceProfileUsingPUTInternalServerError creates a UpdateL2ServiceProfileUsingPUTInternalServerError with default headers values
func NewUpdateL2ServiceProfileUsingPUTInternalServerError() *UpdateL2ServiceProfileUsingPUTInternalServerError {
	return &UpdateL2ServiceProfileUsingPUTInternalServerError{}
}

/*UpdateL2ServiceProfileUsingPUTInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateL2ServiceProfileUsingPUTInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *UpdateL2ServiceProfileUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /ecx/v3/l2/serviceprofiles][%d] updateL2ServiceProfileUsingPUTInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateL2ServiceProfileUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
