// Code generated by go-swagger; DO NOT EDIT.

package access_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/seller/models"
)

// GetAccessTokenReader is a Reader for the GetAccessToken structure.
type GetAccessTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccessTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAccessTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAccessTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccessTokenOK creates a GetAccessTokenOK with default headers values
func NewGetAccessTokenOK() *GetAccessTokenOK {
	return &GetAccessTokenOK{}
}

/*GetAccessTokenOK handles this case with default header values.

success
*/
type GetAccessTokenOK struct {
	Payload *models.OAuthResponse
}

func (o *GetAccessTokenOK) Error() string {
	return fmt.Sprintf("[POST /oauth2/v1/token][%d] getAccessTokenOK  %+v", 200, o.Payload)
}

func (o *GetAccessTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccessTokenBadRequest creates a GetAccessTokenBadRequest with default headers values
func NewGetAccessTokenBadRequest() *GetAccessTokenBadRequest {
	return &GetAccessTokenBadRequest{}
}

/*GetAccessTokenBadRequest handles this case with default header values.

Please enter a valid client id/client secret/username/password and try again
*/
type GetAccessTokenBadRequest struct {
	Payload *models.OAuthErrorResponse
}

func (o *GetAccessTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /oauth2/v1/token][%d] getAccessTokenBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccessTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
