// Code generated by go-swagger; DO NOT EDIT.

package connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/seller/models"
)

// DeleteConnectorUsingDELETEReader is a Reader for the DeleteConnectorUsingDELETE structure.
type DeleteConnectorUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConnectorUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteConnectorUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteConnectorUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteConnectorUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteConnectorUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeleteConnectorUsingDELETEMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteConnectorUsingDELETEConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteConnectorUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteConnectorUsingDELETEServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteConnectorUsingDELETENoContent creates a DeleteConnectorUsingDELETENoContent with default headers values
func NewDeleteConnectorUsingDELETENoContent() *DeleteConnectorUsingDELETENoContent {
	return &DeleteConnectorUsingDELETENoContent{}
}

/*DeleteConnectorUsingDELETENoContent handles this case with default header values.

OK
*/
type DeleteConnectorUsingDELETENoContent struct {
}

func (o *DeleteConnectorUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETENoContent ", 204)
}

func (o *DeleteConnectorUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConnectorUsingDELETEBadRequest creates a DeleteConnectorUsingDELETEBadRequest with default headers values
func NewDeleteConnectorUsingDELETEBadRequest() *DeleteConnectorUsingDELETEBadRequest {
	return &DeleteConnectorUsingDELETEBadRequest{}
}

/*DeleteConnectorUsingDELETEBadRequest handles this case with default header values.

Bad request
*/
type DeleteConnectorUsingDELETEBadRequest struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteConnectorUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteConnectorUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConnectorUsingDELETEUnauthorized creates a DeleteConnectorUsingDELETEUnauthorized with default headers values
func NewDeleteConnectorUsingDELETEUnauthorized() *DeleteConnectorUsingDELETEUnauthorized {
	return &DeleteConnectorUsingDELETEUnauthorized{}
}

/*DeleteConnectorUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteConnectorUsingDELETEUnauthorized struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteConnectorUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETEUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteConnectorUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConnectorUsingDELETEForbidden creates a DeleteConnectorUsingDELETEForbidden with default headers values
func NewDeleteConnectorUsingDELETEForbidden() *DeleteConnectorUsingDELETEForbidden {
	return &DeleteConnectorUsingDELETEForbidden{}
}

/*DeleteConnectorUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteConnectorUsingDELETEForbidden struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteConnectorUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETEForbidden  %+v", 403, o.Payload)
}

func (o *DeleteConnectorUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConnectorUsingDELETEMethodNotAllowed creates a DeleteConnectorUsingDELETEMethodNotAllowed with default headers values
func NewDeleteConnectorUsingDELETEMethodNotAllowed() *DeleteConnectorUsingDELETEMethodNotAllowed {
	return &DeleteConnectorUsingDELETEMethodNotAllowed{}
}

/*DeleteConnectorUsingDELETEMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type DeleteConnectorUsingDELETEMethodNotAllowed struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteConnectorUsingDELETEMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETEMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeleteConnectorUsingDELETEMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConnectorUsingDELETEConflict creates a DeleteConnectorUsingDELETEConflict with default headers values
func NewDeleteConnectorUsingDELETEConflict() *DeleteConnectorUsingDELETEConflict {
	return &DeleteConnectorUsingDELETEConflict{}
}

/*DeleteConnectorUsingDELETEConflict handles this case with default header values.

Conflict
*/
type DeleteConnectorUsingDELETEConflict struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteConnectorUsingDELETEConflict) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETEConflict  %+v", 409, o.Payload)
}

func (o *DeleteConnectorUsingDELETEConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConnectorUsingDELETEInternalServerError creates a DeleteConnectorUsingDELETEInternalServerError with default headers values
func NewDeleteConnectorUsingDELETEInternalServerError() *DeleteConnectorUsingDELETEInternalServerError {
	return &DeleteConnectorUsingDELETEInternalServerError{}
}

/*DeleteConnectorUsingDELETEInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteConnectorUsingDELETEInternalServerError struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteConnectorUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETEInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteConnectorUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConnectorUsingDELETEServiceUnavailable creates a DeleteConnectorUsingDELETEServiceUnavailable with default headers values
func NewDeleteConnectorUsingDELETEServiceUnavailable() *DeleteConnectorUsingDELETEServiceUnavailable {
	return &DeleteConnectorUsingDELETEServiceUnavailable{}
}

/*DeleteConnectorUsingDELETEServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type DeleteConnectorUsingDELETEServiceUnavailable struct {
	Payload models.GeneralErrorMessage
}

func (o *DeleteConnectorUsingDELETEServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /ecx/v3/l3/connector/{uuid}][%d] deleteConnectorUsingDELETEServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteConnectorUsingDELETEServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
