// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ConnectorModel connector model
// swagger:model ConnectorModel
type ConnectorModel struct {

	// bgp Ip subnet size
	BgpIPSubnetSize int32 `json:"bgpIpSubnetSize,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// created by email
	CreatedByEmail string `json:"createdByEmail,omitempty"`

	// created by full name
	CreatedByFullName string `json:"createdByFullName,omitempty"`

	// created date
	CreatedDate string `json:"createdDate,omitempty"`

	// ctag
	Ctag int32 `json:"ctag,omitempty"`

	// customer asn
	CustomerAsn string `json:"customerAsn,omitempty"`

	// customer bgp peering Ip
	CustomerBgpPeeringIP string `json:"customerBgpPeeringIp,omitempty"`

	// equinix asn
	EquinixAsn string `json:"equinixAsn,omitempty"`

	// equinix bgp peering Ip
	EquinixBgpPeeringIP string `json:"equinixBgpPeeringIp,omitempty"`

	// is last connector on r i
	IsLastConnectorOnRI bool `json:"isLastConnectorOnRI,omitempty"`

	// is tagged
	IsTagged bool `json:"isTagged,omitempty"`

	// last updated by
	LastUpdatedBy string `json:"lastUpdatedBy,omitempty"`

	// last updated by email
	LastUpdatedByEmail string `json:"lastUpdatedByEmail,omitempty"`

	// last updated by full name
	LastUpdatedByFullName string `json:"lastUpdatedByFullName,omitempty"`

	// last updated date
	LastUpdatedDate string `json:"lastUpdatedDate,omitempty"`

	// metro code
	MetroCode string `json:"metroCode,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// notification emails
	NotificationEmails []string `json:"notificationEmails"`

	// optional network service
	OptionalNetworkService *GetOptionalNetworkService `json:"optionalNetworkService,omitempty"`

	// port name
	PortName string `json:"portName,omitempty"`

	// port Uuid
	PortUUID string `json:"portUuid,omitempty"`

	// ri name
	RiName string `json:"riName,omitempty"`

	// ri Uuid
	RiUUID string `json:"riUuid,omitempty"`

	// stag
	Stag int32 `json:"stag,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// uuid
	UUID string `json:"uuid,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this connector model
func (m *ConnectorModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOptionalNetworkService(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConnectorModel) validateOptionalNetworkService(formats strfmt.Registry) error {

	if swag.IsZero(m.OptionalNetworkService) { // not required
		return nil
	}

	if m.OptionalNetworkService != nil {
		if err := m.OptionalNetworkService.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("optionalNetworkService")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConnectorModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConnectorModel) UnmarshalBinary(b []byte) error {
	var res ConnectorModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
