// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AdditionalBuyerInfo additional buyer info
// swagger:model AdditionalBuyerInfo
type AdditionalBuyerInfo struct {

	// capture in email
	CaptureInEmail bool `json:"captureInEmail,omitempty"`

	// datatype
	// Enum: [INTEGER BOOLEAN LONG FLOAT DOUBLE STRING]
	Datatype string `json:"datatype,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// mandatory
	Mandatory bool `json:"mandatory,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this additional buyer info
func (m *AdditionalBuyerInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatatype(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var additionalBuyerInfoTypeDatatypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INTEGER","BOOLEAN","LONG","FLOAT","DOUBLE","STRING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		additionalBuyerInfoTypeDatatypePropEnum = append(additionalBuyerInfoTypeDatatypePropEnum, v)
	}
}

const (

	// AdditionalBuyerInfoDatatypeINTEGER captures enum value "INTEGER"
	AdditionalBuyerInfoDatatypeINTEGER string = "INTEGER"

	// AdditionalBuyerInfoDatatypeBOOLEAN captures enum value "BOOLEAN"
	AdditionalBuyerInfoDatatypeBOOLEAN string = "BOOLEAN"

	// AdditionalBuyerInfoDatatypeLONG captures enum value "LONG"
	AdditionalBuyerInfoDatatypeLONG string = "LONG"

	// AdditionalBuyerInfoDatatypeFLOAT captures enum value "FLOAT"
	AdditionalBuyerInfoDatatypeFLOAT string = "FLOAT"

	// AdditionalBuyerInfoDatatypeDOUBLE captures enum value "DOUBLE"
	AdditionalBuyerInfoDatatypeDOUBLE string = "DOUBLE"

	// AdditionalBuyerInfoDatatypeSTRING captures enum value "STRING"
	AdditionalBuyerInfoDatatypeSTRING string = "STRING"
)

// prop value enum
func (m *AdditionalBuyerInfo) validateDatatypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, additionalBuyerInfoTypeDatatypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AdditionalBuyerInfo) validateDatatype(formats strfmt.Registry) error {

	if swag.IsZero(m.Datatype) { // not required
		return nil
	}

	// value enum
	if err := m.validateDatatypeEnum("datatype", "body", m.Datatype); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdditionalBuyerInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdditionalBuyerInfo) UnmarshalBinary(b []byte) error {
	var res AdditionalBuyerInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
