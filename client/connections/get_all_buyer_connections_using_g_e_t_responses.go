// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/models"
)

// GetAllBuyerConnectionsUsingGETReader is a Reader for the GetAllBuyerConnectionsUsingGET structure.
type GetAllBuyerConnectionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllBuyerConnectionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllBuyerConnectionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetAllBuyerConnectionsUsingGETNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAllBuyerConnectionsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAllBuyerConnectionsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAllBuyerConnectionsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllBuyerConnectionsUsingGETOK creates a GetAllBuyerConnectionsUsingGETOK with default headers values
func NewGetAllBuyerConnectionsUsingGETOK() *GetAllBuyerConnectionsUsingGETOK {
	return &GetAllBuyerConnectionsUsingGETOK{}
}

/*GetAllBuyerConnectionsUsingGETOK handles this case with default header values.

OK
*/
type GetAllBuyerConnectionsUsingGETOK struct {
	Payload *models.GetBuyerConnectionResponse
}

func (o *GetAllBuyerConnectionsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l2/buyer/connections][%d] getAllBuyerConnectionsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllBuyerConnectionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetBuyerConnectionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllBuyerConnectionsUsingGETNoContent creates a GetAllBuyerConnectionsUsingGETNoContent with default headers values
func NewGetAllBuyerConnectionsUsingGETNoContent() *GetAllBuyerConnectionsUsingGETNoContent {
	return &GetAllBuyerConnectionsUsingGETNoContent{}
}

/*GetAllBuyerConnectionsUsingGETNoContent handles this case with default header values.

No Content
*/
type GetAllBuyerConnectionsUsingGETNoContent struct {
}

func (o *GetAllBuyerConnectionsUsingGETNoContent) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l2/buyer/connections][%d] getAllBuyerConnectionsUsingGETNoContent ", 204)
}

func (o *GetAllBuyerConnectionsUsingGETNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllBuyerConnectionsUsingGETBadRequest creates a GetAllBuyerConnectionsUsingGETBadRequest with default headers values
func NewGetAllBuyerConnectionsUsingGETBadRequest() *GetAllBuyerConnectionsUsingGETBadRequest {
	return &GetAllBuyerConnectionsUsingGETBadRequest{}
}

/*GetAllBuyerConnectionsUsingGETBadRequest handles this case with default header values.

Bad Request
*/
type GetAllBuyerConnectionsUsingGETBadRequest struct {
	Payload models.ErrorResponseArray
}

func (o *GetAllBuyerConnectionsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l2/buyer/connections][%d] getAllBuyerConnectionsUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllBuyerConnectionsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllBuyerConnectionsUsingGETNotFound creates a GetAllBuyerConnectionsUsingGETNotFound with default headers values
func NewGetAllBuyerConnectionsUsingGETNotFound() *GetAllBuyerConnectionsUsingGETNotFound {
	return &GetAllBuyerConnectionsUsingGETNotFound{}
}

/*GetAllBuyerConnectionsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllBuyerConnectionsUsingGETNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetAllBuyerConnectionsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l2/buyer/connections][%d] getAllBuyerConnectionsUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetAllBuyerConnectionsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllBuyerConnectionsUsingGETInternalServerError creates a GetAllBuyerConnectionsUsingGETInternalServerError with default headers values
func NewGetAllBuyerConnectionsUsingGETInternalServerError() *GetAllBuyerConnectionsUsingGETInternalServerError {
	return &GetAllBuyerConnectionsUsingGETInternalServerError{}
}

/*GetAllBuyerConnectionsUsingGETInternalServerError handles this case with default header values.

Internal server error
*/
type GetAllBuyerConnectionsUsingGETInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetAllBuyerConnectionsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l2/buyer/connections][%d] getAllBuyerConnectionsUsingGETInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllBuyerConnectionsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
