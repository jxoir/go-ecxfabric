// Code generated by go-swagger; DO NOT EDIT.

package seller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/models"
)

// GetSellerServicesUsingGETReader is a Reader for the GetSellerServicesUsingGET structure.
type GetSellerServicesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSellerServicesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSellerServicesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSellerServicesUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSellerServicesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSellerServicesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetSellerServicesUsingGETMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetSellerServicesUsingGETConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSellerServicesUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetSellerServicesUsingGETServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSellerServicesUsingGETOK creates a GetSellerServicesUsingGETOK with default headers values
func NewGetSellerServicesUsingGETOK() *GetSellerServicesUsingGETOK {
	return &GetSellerServicesUsingGETOK{}
}

/*GetSellerServicesUsingGETOK handles this case with default header values.

OK
*/
type GetSellerServicesUsingGETOK struct {
	Payload *models.GetSellerServiceResponse
}

func (o *GetSellerServicesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetSellerServicesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSellerServiceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSellerServicesUsingGETBadRequest creates a GetSellerServicesUsingGETBadRequest with default headers values
func NewGetSellerServicesUsingGETBadRequest() *GetSellerServicesUsingGETBadRequest {
	return &GetSellerServicesUsingGETBadRequest{}
}

/*GetSellerServicesUsingGETBadRequest handles this case with default header values.

Bad request
*/
type GetSellerServicesUsingGETBadRequest struct {
	Payload models.GeneralErrorMessage
}

func (o *GetSellerServicesUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetSellerServicesUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSellerServicesUsingGETUnauthorized creates a GetSellerServicesUsingGETUnauthorized with default headers values
func NewGetSellerServicesUsingGETUnauthorized() *GetSellerServicesUsingGETUnauthorized {
	return &GetSellerServicesUsingGETUnauthorized{}
}

/*GetSellerServicesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSellerServicesUsingGETUnauthorized struct {
	Payload models.GeneralErrorMessage
}

func (o *GetSellerServicesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSellerServicesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSellerServicesUsingGETForbidden creates a GetSellerServicesUsingGETForbidden with default headers values
func NewGetSellerServicesUsingGETForbidden() *GetSellerServicesUsingGETForbidden {
	return &GetSellerServicesUsingGETForbidden{}
}

/*GetSellerServicesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetSellerServicesUsingGETForbidden struct {
	Payload models.GeneralErrorMessage
}

func (o *GetSellerServicesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETForbidden  %+v", 403, o.Payload)
}

func (o *GetSellerServicesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSellerServicesUsingGETMethodNotAllowed creates a GetSellerServicesUsingGETMethodNotAllowed with default headers values
func NewGetSellerServicesUsingGETMethodNotAllowed() *GetSellerServicesUsingGETMethodNotAllowed {
	return &GetSellerServicesUsingGETMethodNotAllowed{}
}

/*GetSellerServicesUsingGETMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type GetSellerServicesUsingGETMethodNotAllowed struct {
	Payload models.GeneralErrorMessage
}

func (o *GetSellerServicesUsingGETMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetSellerServicesUsingGETMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSellerServicesUsingGETConflict creates a GetSellerServicesUsingGETConflict with default headers values
func NewGetSellerServicesUsingGETConflict() *GetSellerServicesUsingGETConflict {
	return &GetSellerServicesUsingGETConflict{}
}

/*GetSellerServicesUsingGETConflict handles this case with default header values.

Conflict
*/
type GetSellerServicesUsingGETConflict struct {
	Payload models.GeneralErrorMessage
}

func (o *GetSellerServicesUsingGETConflict) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETConflict  %+v", 409, o.Payload)
}

func (o *GetSellerServicesUsingGETConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSellerServicesUsingGETInternalServerError creates a GetSellerServicesUsingGETInternalServerError with default headers values
func NewGetSellerServicesUsingGETInternalServerError() *GetSellerServicesUsingGETInternalServerError {
	return &GetSellerServicesUsingGETInternalServerError{}
}

/*GetSellerServicesUsingGETInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSellerServicesUsingGETInternalServerError struct {
	Payload models.GeneralErrorMessage
}

func (o *GetSellerServicesUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSellerServicesUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSellerServicesUsingGETServiceUnavailable creates a GetSellerServicesUsingGETServiceUnavailable with default headers values
func NewGetSellerServicesUsingGETServiceUnavailable() *GetSellerServicesUsingGETServiceUnavailable {
	return &GetSellerServicesUsingGETServiceUnavailable{}
}

/*GetSellerServicesUsingGETServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type GetSellerServicesUsingGETServiceUnavailable struct {
	Payload models.GeneralErrorMessage
}

func (o *GetSellerServicesUsingGETServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/serviceprofiles/service][%d] getSellerServicesUsingGETServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSellerServicesUsingGETServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
