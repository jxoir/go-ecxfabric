// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/models"
)

// CreateUsingPOSTReader is a Reader for the CreateUsingPOST structure.
type CreateUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewCreateUsingPOSTMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateUsingPOSTConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateUsingPOSTServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateUsingPOSTCreated creates a CreateUsingPOSTCreated with default headers values
func NewCreateUsingPOSTCreated() *CreateUsingPOSTCreated {
	return &CreateUsingPOSTCreated{}
}

/*CreateUsingPOSTCreated handles this case with default header values.

success
*/
type CreateUsingPOSTCreated struct {
	Payload *models.SubscriptionCreateResponse
}

func (o *CreateUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTCreated  %+v", 201, o.Payload)
}

func (o *CreateUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SubscriptionCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTBadRequest creates a CreateUsingPOSTBadRequest with default headers values
func NewCreateUsingPOSTBadRequest() *CreateUsingPOSTBadRequest {
	return &CreateUsingPOSTBadRequest{}
}

/*CreateUsingPOSTBadRequest handles this case with default header values.

Bad request
*/
type CreateUsingPOSTBadRequest struct {
	Payload models.GeneralErrorMessage
}

func (o *CreateUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *CreateUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTUnauthorized creates a CreateUsingPOSTUnauthorized with default headers values
func NewCreateUsingPOSTUnauthorized() *CreateUsingPOSTUnauthorized {
	return &CreateUsingPOSTUnauthorized{}
}

/*CreateUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateUsingPOSTUnauthorized struct {
	Payload models.GeneralErrorMessage
}

func (o *CreateUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTForbidden creates a CreateUsingPOSTForbidden with default headers values
func NewCreateUsingPOSTForbidden() *CreateUsingPOSTForbidden {
	return &CreateUsingPOSTForbidden{}
}

/*CreateUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type CreateUsingPOSTForbidden struct {
	Payload models.GeneralErrorMessage
}

func (o *CreateUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTForbidden  %+v", 403, o.Payload)
}

func (o *CreateUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTMethodNotAllowed creates a CreateUsingPOSTMethodNotAllowed with default headers values
func NewCreateUsingPOSTMethodNotAllowed() *CreateUsingPOSTMethodNotAllowed {
	return &CreateUsingPOSTMethodNotAllowed{}
}

/*CreateUsingPOSTMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type CreateUsingPOSTMethodNotAllowed struct {
	Payload models.GeneralErrorMessage
}

func (o *CreateUsingPOSTMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateUsingPOSTMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTConflict creates a CreateUsingPOSTConflict with default headers values
func NewCreateUsingPOSTConflict() *CreateUsingPOSTConflict {
	return &CreateUsingPOSTConflict{}
}

/*CreateUsingPOSTConflict handles this case with default header values.

Conflict
*/
type CreateUsingPOSTConflict struct {
	Payload models.GeneralErrorMessage
}

func (o *CreateUsingPOSTConflict) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTConflict  %+v", 409, o.Payload)
}

func (o *CreateUsingPOSTConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTInternalServerError creates a CreateUsingPOSTInternalServerError with default headers values
func NewCreateUsingPOSTInternalServerError() *CreateUsingPOSTInternalServerError {
	return &CreateUsingPOSTInternalServerError{}
}

/*CreateUsingPOSTInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateUsingPOSTInternalServerError struct {
	Payload models.GeneralErrorMessage
}

func (o *CreateUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTServiceUnavailable creates a CreateUsingPOSTServiceUnavailable with default headers values
func NewCreateUsingPOSTServiceUnavailable() *CreateUsingPOSTServiceUnavailable {
	return &CreateUsingPOSTServiceUnavailable{}
}

/*CreateUsingPOSTServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type CreateUsingPOSTServiceUnavailable struct {
	Payload models.GeneralErrorMessage
}

func (o *CreateUsingPOSTServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /ecx/v3/l3/subscription][%d] createUsingPOSTServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateUsingPOSTServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
