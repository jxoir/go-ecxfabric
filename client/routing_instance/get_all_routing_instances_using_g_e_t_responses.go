// Code generated by go-swagger; DO NOT EDIT.

package routing_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jxoir/go-ecxfabric/models"
)

// GetAllRoutingInstancesUsingGETReader is a Reader for the GetAllRoutingInstancesUsingGET structure.
type GetAllRoutingInstancesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllRoutingInstancesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllRoutingInstancesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetAllRoutingInstancesUsingGETNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAllRoutingInstancesUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAllRoutingInstancesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAllRoutingInstancesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetAllRoutingInstancesUsingGETMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetAllRoutingInstancesUsingGETConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAllRoutingInstancesUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetAllRoutingInstancesUsingGETServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllRoutingInstancesUsingGETOK creates a GetAllRoutingInstancesUsingGETOK with default headers values
func NewGetAllRoutingInstancesUsingGETOK() *GetAllRoutingInstancesUsingGETOK {
	return &GetAllRoutingInstancesUsingGETOK{}
}

/*GetAllRoutingInstancesUsingGETOK handles this case with default header values.

success
*/
type GetAllRoutingInstancesUsingGETOK struct {
	Payload *models.GetRoutingInstancesResponse
}

func (o *GetAllRoutingInstancesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetRoutingInstancesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETNoContent creates a GetAllRoutingInstancesUsingGETNoContent with default headers values
func NewGetAllRoutingInstancesUsingGETNoContent() *GetAllRoutingInstancesUsingGETNoContent {
	return &GetAllRoutingInstancesUsingGETNoContent{}
}

/*GetAllRoutingInstancesUsingGETNoContent handles this case with default header values.

No Content
*/
type GetAllRoutingInstancesUsingGETNoContent struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETNoContent) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETNoContent  %+v", 204, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETBadRequest creates a GetAllRoutingInstancesUsingGETBadRequest with default headers values
func NewGetAllRoutingInstancesUsingGETBadRequest() *GetAllRoutingInstancesUsingGETBadRequest {
	return &GetAllRoutingInstancesUsingGETBadRequest{}
}

/*GetAllRoutingInstancesUsingGETBadRequest handles this case with default header values.

Bad request
*/
type GetAllRoutingInstancesUsingGETBadRequest struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETUnauthorized creates a GetAllRoutingInstancesUsingGETUnauthorized with default headers values
func NewGetAllRoutingInstancesUsingGETUnauthorized() *GetAllRoutingInstancesUsingGETUnauthorized {
	return &GetAllRoutingInstancesUsingGETUnauthorized{}
}

/*GetAllRoutingInstancesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllRoutingInstancesUsingGETUnauthorized struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETForbidden creates a GetAllRoutingInstancesUsingGETForbidden with default headers values
func NewGetAllRoutingInstancesUsingGETForbidden() *GetAllRoutingInstancesUsingGETForbidden {
	return &GetAllRoutingInstancesUsingGETForbidden{}
}

/*GetAllRoutingInstancesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllRoutingInstancesUsingGETForbidden struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETForbidden  %+v", 403, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETMethodNotAllowed creates a GetAllRoutingInstancesUsingGETMethodNotAllowed with default headers values
func NewGetAllRoutingInstancesUsingGETMethodNotAllowed() *GetAllRoutingInstancesUsingGETMethodNotAllowed {
	return &GetAllRoutingInstancesUsingGETMethodNotAllowed{}
}

/*GetAllRoutingInstancesUsingGETMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type GetAllRoutingInstancesUsingGETMethodNotAllowed struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETConflict creates a GetAllRoutingInstancesUsingGETConflict with default headers values
func NewGetAllRoutingInstancesUsingGETConflict() *GetAllRoutingInstancesUsingGETConflict {
	return &GetAllRoutingInstancesUsingGETConflict{}
}

/*GetAllRoutingInstancesUsingGETConflict handles this case with default header values.

Conflict
*/
type GetAllRoutingInstancesUsingGETConflict struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETConflict) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETConflict  %+v", 409, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETInternalServerError creates a GetAllRoutingInstancesUsingGETInternalServerError with default headers values
func NewGetAllRoutingInstancesUsingGETInternalServerError() *GetAllRoutingInstancesUsingGETInternalServerError {
	return &GetAllRoutingInstancesUsingGETInternalServerError{}
}

/*GetAllRoutingInstancesUsingGETInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAllRoutingInstancesUsingGETInternalServerError struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRoutingInstancesUsingGETServiceUnavailable creates a GetAllRoutingInstancesUsingGETServiceUnavailable with default headers values
func NewGetAllRoutingInstancesUsingGETServiceUnavailable() *GetAllRoutingInstancesUsingGETServiceUnavailable {
	return &GetAllRoutingInstancesUsingGETServiceUnavailable{}
}

/*GetAllRoutingInstancesUsingGETServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type GetAllRoutingInstancesUsingGETServiceUnavailable struct {
	Payload models.GeneralErrorMessage
}

func (o *GetAllRoutingInstancesUsingGETServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /ecx/v3/l3/routinginstance][%d] getAllRoutingInstancesUsingGETServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAllRoutingInstancesUsingGETServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
